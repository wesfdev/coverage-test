name: CI

on:
  push:
    branches:
      - '**'
  pull_request:
    types: [opened]      

env:
  MIX_ENV: test
  COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
  COVERALLS_URL: ${{ secrets.COVERALLS_URL }} 


jobs:
  run-tests:
    name: Test on OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        otp: ['25.0.4']       # Define the OTP version [required]
        elixir: ['1.14.1']    # Define the elixir version [required]    

    steps:
    - name: Print gitHub values
      run: |
        echo "GitHub github.event_name: ${{ github.event_name }}"
        echo "Github github.event.pull_request: ${{ github.event.pull_request }}"
        echo "Github github.sha: ${{ github.sha }}"
        echo "Github github.event.pull_request.head.sha: ${{ github.event.pull_request.head.sha }}"
        echo "Github github.ref_name: ${{ github.ref_name }}"
        echo "Github github.head_ref: ${{ github.head_ref }}"
        echo "Github github.repository: ${{ github.repository }}"

    - name: Get PR Associated with the Branch
      id: get_pr
      run: |
        USER=$(echo "${{ github.repository }}" | cut -d'/' -f1)
        echo "USER: $USER"

        PR_NUMBER=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/pulls?state=open&head=$USER:${{ github.head_ref || github.ref_name }}" | \
          jq '.[0].number')
        echo "PR_NUMBER: $PR_NUMBER"
        
    # Step: Setup Elixir + Erlang image as the base.
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        otp-version: ${{matrix.otp}}
        elixir-version: ${{matrix.elixir}}

    # Step: Check out the code.
    - name: Checkout code
      uses: actions/checkout@v3

    # Step: Define how to cache deps. Restores existing cache if present.
    - name: Cache deps
      id: cache-deps
      uses: actions/cache@v3
      env:
        cache-name: cache-elixir-deps
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-${{ env.cache-name }}-

    - name: Cache compiled build
      id: cache-build
      uses: actions/cache@v3
      env:
        cache-name: cache-compiled-build
      with:
        path: _build
        key: ${{ runner.os }}-mix-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-${{ env.cache-name }}-
          ${{ runner.os }}-mix-

    - name: Install dependencies
      run: mix deps.get

    - name: Compiles without warnings
      run: mix compile --warnings-as-errors

    - name: Check Formatting
      run: mix format --check-formatted

    - name: Run Coveralls
      run: MIX_ENV=test mix coveralls.post  --branch "${{ github.head_ref || github.ref_name }}" --name "ci_workflow" --committer "${{ github.actor }}" --sha "${{ github.event.pull_request.head.sha || github.sha }}" --message "${{ github.event.head_commit.message }}"
